import os
import io
import json
import discord
import requests
from discord.ext import commands
from PIL import Image, ImageDraw, ImageFont, ImageOps
import aiohttp
from dotenv import load_dotenv

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix=".", intents=intents)

# –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —à—Ä–∏—Ñ—Ç–∞
background_image = Image.open("welcomeeea.jpg")
font = ImageFont.truetype("welcomefont.ttf", 90)

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
LEVEL_ROLES = {
    5: 123456789012345678,  # ID —Ä–æ–ª–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è 5
    10: 234567890123456789,  # ID —Ä–æ–ª–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è 10
    15: 345678901234567890,  # ID —Ä–æ–ª–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è 15
    20: 345678901234567890,
    25: 345678901234567890,
    30: 345678901234567890,
    35: 345678901234567890,
    40: 345678901234567890,
    45: 345678901234567890,
    50: 345678901234567890,
    55: 345678901234567890,
    60: 345678901234567890,
    65: 345678901234567890,
    70: 345678901234567890,
    75: 345678901234567890,
    80: 345678901234567890,
    85: 345678901234567890,
    90: 345678901234567890,
    95: 345678901234567890,
    100: 345678901234567890,
}

# –°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π
def calculate_level(xp):
    return int((xp / 180) ** 0.55)  # –ü—Ä–∏–º–µ—Ä: —É—Ä–æ–≤–µ–Ω—å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 100 XP

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON-—Ñ–∞–π–ª–∞
def load_data():
    try:
        with open("levels.json", "r") as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ JSON-—Ñ–∞–π–ª
def save_data(data):
    with open("levels.json", "w") as f:
        json.dump(data, f, indent=4)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = load_data()

@bot.event
async def on_ready():
    print("BOT ONLINE")

async def fetch_avatar(url):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏"""
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            return await response.read()

def process_avatar(avatar_bytes):
    """–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Å–∫–∏"""
    avatar_image = Image.open(io.BytesIO(avatar_bytes))
    avatar_image = avatar_image.resize((550, 550))
    mask = Image.new('L', avatar_image.size, 0)
    draw_mask = ImageDraw.Draw(mask)
    draw_mask.ellipse((0, 0, avatar_image.width, avatar_image.height), fill=255)
    return ImageOps.fit(avatar_image, mask.size, centering=(0.5, 0.5)).convert("RGBA"), mask

@bot.event
async def on_member_join(member):
    """–°–æ–∑–¥–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    avatar_url = member.avatar.url if member.avatar else member.default_avatar.url
    avatar_bytes = await fetch_avatar(avatar_url)
    avatar_image, mask = process_avatar(avatar_bytes)
    
    background = background_image.copy()
    background.paste(avatar_image, (207, 196), mask=mask)
    draw = ImageDraw.Draw(background)
    draw.text((490, 850), f"{member.name}", font=font, fill=(255, 255, 255), anchor="mm")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    background.save("welcome_image.png")
    channel = discord.utils.get(member.guild.channels, name="üè†„Éªwelcome")
    if channel:
        await channel.send(f"Hey {member.mention}, welcome to **Eastern European Association**!", file=discord.File("welcome_image.png"))

@bot.event
async def on_member_remove(member):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞"""
    channel = discord.utils.get(member.guild.channels, name="üè†„Éªwelcome")
    if channel:
        await channel.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{member.name}** –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä")

@bot.event
async def on_message(message):
    """–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è XP –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Ä–æ–≤–Ω—è"""
    if message.author.bot:
        return

    user_id = str(message.author.id)
    user_data.setdefault(user_id, {"xp": 0, "level": 0})

    # –ù–∞—á–∏—Å–ª—è–µ–º XP
    user_data[user_id]["xp"] += 10  # –ü—Ä–∏–º–µ—Ä: 10 XP –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    new_level = calculate_level(user_data[user_id]["xp"])

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–≤—ã—Å–∏–ª—Å—è –ª–∏ —É—Ä–æ–≤–µ–Ω—å
    if new_level > user_data[user_id]["level"]:
        user_data[user_id]["level"] = new_level
        await message.channel.send(f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, {message.author.mention}! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —É—Ä–æ–≤–Ω—è {new_level}! üéâ")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –≤—ã–¥–∞—Ç—å –Ω–æ–≤—É—é —Ä–æ–ª—å
        if new_level in LEVEL_ROLES:
            role = message.guild.get_role(LEVEL_ROLES[new_level])
            if role:
                await message.author.add_roles(role)
                await message.channel.send(f"{message.author.mention} –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å {role.name} –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è {new_level}!")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    save_data(user_data)

    await bot.process_commands(message)

@bot.command()
async def rank(ctx, member: discord.Member = None):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –∏ XP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    member = member or ctx.author
    user_id = str(member.id)
    xp = user_data.get(user_id, {}).get("xp", 0)
    level = user_data.get(user_id, {}).get("level", 0)
    await ctx.send(f"{member.mention} - –£—Ä–æ–≤–µ–Ω—å: {level}, XP: {xp}")

@bot.command()
async def leaderboard(ctx, top_n: int = 10):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—è–º –∏ XP"""
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—é –∏ XP
    sorted_users = sorted(user_data.items(), key=lambda x: (x[1]["level"], x[1]["xp"]), reverse=True)

    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–≤–æ–¥–∏–º—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–æ `top_n`
    top_users = sorted_users[:top_n]

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–ø–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    leaderboard_message = "**üèÜ –¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—è–º üèÜ**\n\n"
    for rank, (user_id, data) in enumerate(top_users, start=1):
        member = ctx.guild.get_member(int(user_id))  # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ ID
        if member:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É—á–∞—Å—Ç–Ω–∏–∫ –µ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            leaderboard_message += f"{rank}. {member.mention} - –£—Ä–æ–≤–µ–Ω—å: {data['level']}, XP: {data['xp']}\n"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π –ª–∏–¥–µ—Ä–æ–≤
    await ctx.send(leaderboard_message)


bot.run(BOT_TOKEN)
